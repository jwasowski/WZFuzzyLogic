// Block definition (there may be more than one block per file)
FUNCTION_BLOCK salaryRating

// Define input variables
VAR_INPUT
    skill : REAL;
    expirience : REAL;
    softSkills : REAL;
END_VAR

// Define output variable
VAR_OUTPUT
    salary : REAL;
END_VAR

// Fuzzify input variable 'service'
FUZZIFY skill
    TERM junior := (0, 1) (3, 0) ; 
    TERM mid := (1, 0) (5,1) (7,0);
    TERM senior := (5, 0) (7, 1) (9,0);
    TERM ninja := (7, 0) (10, 1);
END_FUZZIFY

// Fuzzify input variable 'food'
FUZZIFY expirience
    TERM juniorExp := (0, 1) (2,0) ;
    TERM midExp := (1,0) (3,1) (4,0) ;
    TERM seniorExp := (3, 0) (10, 1) ;
END_FUZZIFY

// Fuzzify input variable 'food'
FUZZIFY softSkills
    TERM low := (0, 1) (3,0) ;
    TERM average := (2,0) (4,1) (6,0);
    TERM good := (4,0) (8,1);
END_FUZZIFY

// Defzzzify output variable 'tip'
DEFUZZIFY salary
    TERM low := (0,0) (3,1) (6,0);
    TERM average := (6,0) (12,1) (16,0);
    TERM high := (16,0) (25,1) (30,0);
    TERM veryHigh := (30,0) (35,1) (40,0);
    // Use 'Center Of Gravity' defuzzification method
    METHOD : COG;
    // Default value is 0 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK No1
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

    RULE 1 : IF skill IS junior OR expirience IS juniorExp 
                THEN salary IS low;

    RULE 2 : IF skill IS mid OR expirience IS midExp
                THEN salary IS average; 

    RULE 3 : IF skill IS senior AND expirience IS seniorExp 
                THEN salary IS veryHigh;
END_RULEBLOCK

END_FUNCTION_BLOCK